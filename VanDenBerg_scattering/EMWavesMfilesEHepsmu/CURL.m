function w = CURL(v,input)
global nDIM;                           dx = input.dx; 

if nDIM == 2;         N1 = input.N1;   N2 = input.N2;     
  w{1} = zeros(size(v{1}));  w{2} = w{1};          w{3} = w{1};
  w{1}(:,2:N2-1)      =  (v{3}(:,3:N2) - v{3}(:,1:N2-2));            
  w{2}(2:N1-1,:)      = -(v{3}(3:N1,:) - v{3}(1:N1-2,:));  
  w{3}(2:N1-1,2:N2-1) =  (v{2}(3:N1,2:N2-1) - v{2}(1:N1-2,2:N2-1))... 
                        -(v{1}(2:N1-1,3:N2) - v{1}(2:N1-1,1:N2-2));   
  w{1} = w{1}/(2*dx);   w{2} = w{2}/(2*dx);   w{3} = w{3}/(2*dx);    
    
elseif nDIM == 3;    N1 = input.N1;    N2 = input.N2;    N3 = input.N3;    
  w{1} = zeros(size(v{1}));  w{2} = w{1};          w{3} = w{1};
  w{1}(:,2:N2-1,2:N3-1) = (v{3}(:,3:N2,2:N3-1) - v{3}(:,1:N2-2,2:N3-1))... 
                         - (v{2}(:,2:N2-1,3:N3) - v{2}(:,2:N2-1,1:N3-2));    
  w{2}(2:N1-1,:,2:N3-1) = (v{1}(2:N1-1,:,3:N3) - v{1}(2:N1-1,:,1:N3-2))... 
                         -(v{3}(3:N1,:,2:N3-1) - v{3}(1:N1-2,:,2:N3-1));    
  w{3}(2:N1-1,2:N2-1,:) = (v{2}(3:N1,2:N2-1,:) - v{2}(1:N1-2,2:N2-1,:))...  
                         -(v{1}(2:N1-1,3:N2,:) - v{1}(2:N1-1,1:N2-2,:));    
  w{1} = w{1}/(2*dx);    w{2} = w{2}/(2*dx);    w{3} = w{3}/(2*dx); 
end % if