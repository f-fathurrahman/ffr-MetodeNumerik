function u = graddiv(v,input)
global nDIM;  dx = input.dx;  

if nDIM == 1                                             

N1 = input.N1;   u{1} = zeros(size(v{1}));
% Compute d1d1_v1                ------------------------------------------
 u{1}(2:N1-1) = (v{1}(1:N1-2) - 2*v{1}(2:N1-1) + v{1}(3:N1))/dx^2; 
   
elseif nDIM == 2                          

N1 = input.N1;  N2 = input.N2;  u{1} = zeros(size(v{1}));  u{2} = u{1};
% Compute d1d1_v1, d2d2_v2       ------------------------------------------
 u{1}(2:N1-1,:) = v{1}(1:N1-2,:) - 2*v{1}(2:N1-1,:) + v{1}(3:N1,:);
 u{2}(:,2:N2-1) = v{2}(:,1:N2-2) - 2*v{2}(:,2:N2-1) + v{2}(:,3:N2);
% Replace the input vector v1 by d1_v and v2 by d2_v2 ---------------------
  v{1}(2:N1-1,:) = (v{1}(3:N1,:) - v{1}(1:N1-2,:))/2;   % d1_v1
  v{2}(:,2:N2-1) = (v{2}(:,3:N2) - v{2}(:,1:N2-2))/2;   % d2_v2
% Add d1_v2 = d1d2_v2 to output vector u1 ---------------------------------
 u{1}(2:N1-1,:)= u{1}(2:N1-1,:)+(v{2}(3:N1,:)-v{2}(1:N1-2,:))/2;
% Add d2_v1 = d2d1_v1 to output vector u2 ---------------------------------
 u{2}(:,2:N2-1)= u{2}(:,2:N2-1)+(v{1}(:,3:N2)-v{1}(:,1:N2-2))/2;        

 u{1} = u{1}/dx^2;      u{2} = u{2}/dx^2;                 % divide by dx^2

elseif nDIM == 3             

N1   = input.N1;             N2   = input.N2;    N3   = input.N3;
u{1} = zeros(size(v{1}));    u{2} = u{1};        u{3} = u{1};
% Compute d1d1_v1, d2d2_v2, d3d3_v3 ---------------------------------------
 u{1}(2:N1-1,:,:) = v{1}(1:N1-2,:,:) - 2*v{1}(2:N1-1,:,:) + v{1}(3:N1,:,:);
 u{2}(:,2:N2-1,:) = v{2}(:,1:N2-2,:) - 2*v{2}(:,2:N2-1,:) + v{2}(:,3:N2,:);
 u{3}(:,:,2:N3-1) = v{3}(:,:,1:N3-2) - 2*v{3}(:,:,2:N3-1) + v{3}(:,:,3:N3);
% Replace the input vector v1 by d1_v, v2 by d2_v2 and v3 by d3_v3 --------
  v{1}(2:N1-1,:,:) = (v{1}(3:N1,:,:) - v{1}(1:N1-2,:,:))/2;   % d1_v1
  v{2}(:,2:N2-1,:) = (v{2}(:,3:N2,:) - v{2}(:,1:N2-2,:))/2;   % d2_v2
  v{3}(:,:,2:N3-1) = (v{3}(:,:,3:N3) - v{3}(:,:,1:N3-2))/2;   % d3_v3
% Add d1_v2 = d1d2_v2 and d1_v3 = d1d3_v3  to output vector u1 ------------
 u{1}(2:N1-1,:,:)= u{1}(2:N1-1,:,:)+(v{2}(3:N1,:,:)-v{2}(1:N1-2,:,:))/2 ...
                                  +(v{3}(3:N1,:,:)-v{3}(1:N1-2,:,:))/2; 
% Add d2_v1 = d2d1_v1 and dw v3 = d2d3_v3 to output vector u2 -------------
 u{2}(:,2:N2-1,:)= u{2}(:,2:N2-1,:)+(v{1}(:,3:N2,:)-v{1}(:,1:N2-2,:))/2 ...
                                  +(v{3}(:,3:N2,:)-v{3}(:,1:N2-2,:))/2;   
% Add d3_v1 = d3d1_v1 and d3_v2 = d3d2_v2 to output vector u3 -------------
 u{3}(:,:,2:N3-1)= u{3}(:,:,2:N3-1)+(v{1}(:,:,3:N3)-v{1}(:,:,1:N3-2))/2 ...
                                  +(v{2}(:,:,3:N3)-v{2}(:,:,1:N3-2))/2; 
                              
 u{1} = u{1}/dx^2; u{2} = u{2}/dx^2; u{3} = u{3}/dx^2;     % divide by dx^2             
end